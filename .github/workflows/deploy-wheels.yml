---
name: Build sdist and wheels

on:
  push:
  pull_request:
  release:
    types:
      - published
jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Create sdist
        shell: bash -l {0}
        run: |
          python -m pip install -q build
          python -m build -s

      - name: Upload sdist to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: "Build wheels on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macos-11, ubuntu-20.04]

    steps:
      - uses: actions/checkout@v4
      - run: |
          git fetch --prune --unshallow

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.0
        env:
          CIBW_SKIP: "cp36-* cp37-* cp38-* pp*"
          CIBW_ARCHS_LINUX: "auto aarch64 ppc64le s390x"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
          CIBW_TEST_COMMAND: "pytest -v --pyargs pykdtree"
          CIBW_TEST_REQUIRES: "pytest"

      - name: Upload wheel(s) as build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Download sdist artifact
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist
      - name: Download wheels artifact
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Publish package to PyPI
        if: github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          user: ${{ secrets.pypi_username }}
          password: ${{ secrets.pypi_password }}
          skip_existing: true

